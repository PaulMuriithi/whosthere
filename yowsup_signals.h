/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -N -c yowsup_signals -p yowsup_signals.h:yowsup_signals.cpp com.yowsup.0.signals.xml com.yowsup.signals
 *
 * qdbusxml2cpp is Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef YOWSUP_SIGNALS_H_1362265086
#define YOWSUP_SIGNALS_H_1362265086

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.yowsup.signals
 */
class yowsup_signals: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.yowsup.signals"; }

public:
    yowsup_signals(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~yowsup_signals();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> getSignals()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("getSignals"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void audio_received(const QString &msgId, const QString &jid, const QString &url, int size, bool wantsReceipt);
    void auth_fail(const QString &username, const QString &reason);
    void auth_success(const QString &username);
    void code_register_response(const QString &status, const QString &reason, const QString &pw);
    void code_request_response(const QString &status, const QString &reason);
    void contact_gotProfilePicture(const QString &jid, const QString &filename);
    void contact_gotProfilePictureId(const QString &jid, const QString &pictureId);
    void contact_paused(const QString &jid);
    void contact_typing(const QString &jid);
    void disconnected(const QString &reason);
    void group_addParticipantsSuccess(const QString &jid);
    void group_audioReceived(const QString &msgId, const QString &jid, const QString &author, const QString &url, int size, bool wantsReceipt);
    void group_createFail(const QString &errorCode);
    void group_createSuccess(const QString &jid, const QString &group_id);
    void group_endSuccess(const QString &jid);
    void group_gotInfo(const QString &jid, const QString &owner, const QString &subject, const QString &subjectOwner, const QString &subjectT, const QString &creation);
    void group_gotParticipants(const QString &jid, const QString &jids);
    void group_gotPicture(const QString &jid, const QString &filepath);
    void group_imageReceived(const QString &msgId, const QString &jid, const QString &author, const QString &preview, const QString &url, int size, bool wantsReceipt);
    void group_infoError(const QString &errorCode);
    void group_locationReceived(const QString &msgId, const QString &jid, const QString &author, const QString &name, const QString &preview, double latitude, double longitude, bool wantsReceipt);
    void group_messageReceived(const QString &msgId, const QString &jid, const QString &author, const QString &content, const QString &timestamp, bool wantsReceipt);
    void group_removeParticipantsSuccess(const QString &jid);
    void group_setPictureError(const QString &jid, const QString &errorCode);
    void group_setPictureSuccess(const QString &jid);
    void group_setSubjectSuccess(const QString &jid);
    void group_subjectReceived(const QString &msgId, const QString &fromAttribute, const QString &author, const QString &newSubject, const QString &timestamp, const QString &receiptRequested);
    void group_vcardReceived(const QString &msgId, const QString &jid, const QString &author, const QString &name, const QString &data, bool wantsReceipt);
    void group_videoReceived(const QString &msgId, const QString &jid, const QString &author, const QString &preview, const QString &url, int size, bool wantsReceipt);
    void image_received(const QString &msgId, const QString &jid, const QByteArray &preview, const QString &url, int size, bool wantsReceipt);
    void location_received(const QString &msgId, const QString &jid, const QString &name, const QString &preview, double latitude, double longitude, bool wantsReceipt);
    void message_error(const QString &msgId, const QString &jid, const QString &errorCode);
    void message_received(const QString &msgId, const QString &jid, const QString &content, int timestamp, bool wantsReceipt, const QString &pushName);
    void notification_contactProfilePictureUpdated(const QString &jid, const QString &timestamp, const QString &msgId, bool wantsReceipt);
    void notification_groupParticipantAdded(const QString &gJid, const QString &jid, const QString &author, const QString &timestamp, const QString &msgId, bool wantsReceipt);
    void notification_groupParticipantRemoved(const QString &gjid, const QString &jid, const QString &author, const QString &timestamp, const QString &msgId, bool wantsReceipt);
    void notification_groupPictureUpdated(const QString &jid, const QString &author, const QString &timestamp, const QString &msgId, bool wantsReceipt);
    void ping(const QString &pingId);
    void pong();
    void presence_available(const QString &jid);
    void presence_unavailable(const QString &jid);
    void presence_updated(const QString &jid, const QString &lastSeen);
    void profile_setPictureError(const QString &errorCode);
    void profile_setPictureSuccess();
    void profile_setStatusSuccess(const QString &jid, const QString &msgId);
    void receipt_messageDelivered(const QString &jid, const QString &msgId);
    void receipt_messageSent(const QString &jid, const QString &msgId);
    void receipt_visible(const QString &jid, const QString &msgId);
    void status_dirty();
    void vcard_received(const QString &msgId, const QString &jid, const QString &name, const QString &data, bool wantsReceipt);
    void video_received(const QString &msgId, const QString &jid, const QString &preview, const QString &url, int size, bool wantsReceipt);
};

#endif
